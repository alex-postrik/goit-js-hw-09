{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAS7B,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAIX,SAAlBP,EAAcC,EAAUU,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaZ,KAAKC,SAAW,GAGpCS,EAAQ,C,SAAEZ,EAAUC,MAAAS,IAEpBG,EAAO,C,SAAEb,EAAUC,MAAAS,GAAQ,GAE5BA,EAAM,G,CAbYL,SAASC,cAAc,yBAmB/BS,iBAAiB,SAASC,IACzCA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOZ,EAAMa,OAC1BC,EAAYF,OAAOX,EAAKY,OAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAOW,MAAOE,GAAK,EACrCvB,EAAc,EAAIuB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,EAACvB,SAAEA,EAAUC,MAAAuB,MACjBC,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBwB,MAAU,IAGnDI,OAAM,EAAC5B,SAAEA,EAAUC,MAAA4B,MAClBJ,EAAA5B,GAAS6B,OAAOI,QACd,sBAAoB9B,QAAe6B,MAAU,IAIrDzB,EAAK2B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\n// функція для створення обіцянки\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n\n  let firstDelay = Number(delay.value); \n  let delayStep = Number(step.value); \n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset(); \n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","delay1","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","reset"],"version":3,"file":"03-promises.a211f43c.js.map"}